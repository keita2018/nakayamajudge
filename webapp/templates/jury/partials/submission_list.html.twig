{# Render a list of submissions for a jury page #}
{# @var \App\Entity\ExternalJudgement externalJudgement #}

{% if showExternalResult is not defined %}
    {% set showExternalResult = false %}
{% endif %}
{% if showExternalTestcases is not defined %}
    {% set showExternalTestcases = false %}
{% endif %}

{% set rowSpan = 1 %}
{% set tdExtraClass = '' %}
{% if showExternalResult and showExternalTestcases %}
    {% set rowSpan = 3 %}
    {% set tdExtraClass = ' thick-border' %}
{% endif %}

{% if submissions is empty %}
    <div class="alert alert-warning">No submissions</div>
{% else %}
    <div>
        <span class="badge badge-info">{{ submissionCounts.total }} submitted</span>
        <span class="badge badge-success">{{ submissionCounts.correct }} correct</span>

        {% if submissionCounts.unverified > 0 %}
            <span class="badge badge-warning">{{ submissionCounts.unverified }} unverified</span>
        {% endif %}

        {% if submissionCounts.ignored > 0 %}
            <span class="badge badge-dark">{{ submissionCounts.ignored }} ignored</span>
        {% endif %}

        {% if submissionCounts.judging > 0 %}
            <span class="badge badge-primary">{{ submissionCounts.judging }} judging</span>
        {% endif %}

        {% if submissionCounts.queued > 0 %}
            <span class="badge badge-danger">{{ submissionCounts.queued }} queued (from {{submissionCounts.perteam}} teams)</span>
        {% endif %}
    </div>

    {# ===== 1チーム=1行 ＋ (team, problem) 代表提出（正解優先／全不正解なら最大通過） ===== #}

    {% set groups = {} %}

    {% for submission in submissions %}
    {% set teamName  = submission.team.effectiveName %}
    {% set teamKey   = teamName ~ '' %}  {# 文字列キー固定 #}

    {# 問題キーは shortname を使って厳密に1つへ集約 #}
    {% set probKey   = submission.contestProblem.shortname ~ '' %}
    {% set probLabel = submission.contestProblem.shortname ~ ' - ' ~ submission.problem.name %}

    {# 判定→正解/不正解 #}
    {% set result_text = (submission | printValidJurySubmissionResult(false))|lower %}
    {% set isCorrect   = (result_text == 'correct') %}
    {% set seikai      = isCorrect ? '正解' : '不正解' %}

    {# 通過数/総数 #}
    {% set j = submission.judgings.first is defined ? submission.judgings.first : null %}
    {% set runs = [] %}
    {% if j %}
        {% if attribute(j, 'judgingRuns') is defined and j.judgingRuns is not empty %}
            {% set runs = j.judgingRuns %}
        {% elseif attribute(j, 'runs') is defined and j.runs is not empty %}
            {% set runs = j.runs %}
        {% endif %}
    {% endif %}

    {% set passed = 0 %}
    {% set total  = 0 %}
    {% for r in runs %}
        {% set rr = (attribute(r, 'runresult') is defined and r.runresult is not empty) ? r.runresult|lower : '' %}
        {% set total = total + 1 %}
        {% if rr == 'correct' or rr == 'accepted' %}
            {% set passed = passed + 1 %}
        {% endif %}
    {% endfor %}

    {# 既存の items（辞書）を取得 #}
    {% set items   = (groups[teamKey].items|default({})) %}
    {% set current = attribute(items, probKey) is defined ? attribute(items, probKey) : null %}

    {# 代表選定：
        1) current が無い → 採用
        2) 新=正解, 現在=不正解/未定義 → 採用
        3) どちらも不正解 → 新 passed が current.passed より大きい時のみ採用（同点は据え置き＝先勝ち）
    #}
    {% set currentIsCorrect = current is not null and current.isCorrect is defined and current.isCorrect %}
    {% set currentPassed    = current is not null and current.passed is defined ? current.passed : -1 %}

    {% set replace =
        (current is null)
        or (isCorrect and not currentIsCorrect)
        or ((not isCorrect) and (not currentIsCorrect) and (passed > currentPassed))
    %}

    {% if replace %}
        {% set newItem = {
        'prob'     : probLabel,
        'seikai'   : seikai,
        'passed'   : passed,
        'total'    : total,
        'isCorrect': isCorrect
        } %}
        {% set items  = items|merge({ (probKey): newItem }) %}
    {% endif %}

    {% set groups = groups|merge({ (teamKey): {'name': teamName, 'items': items} }) %}
    {% endfor %}

    {# === CSVダウンロードボタン（縦CSV + 横CSV） === #}
    <div class="text-right my-2">
        {# <button id="download-digest" class="btn btn-sm btn-outline-primary mr-2">
            <i class="fas fa-download"></i> ダイジェスト表をCSVで保存（縦）
        </button> #}
        <button id="download-digest-wide" class="btn btn-sm btn-outline-success">
            <i class="fas fa-download"></i> ダイジェスト表をCSVで保存
        </button>
    </div>

    <script>
    (function(){
        // 既存の「縦」CSV（セル内の複数行は "/" で結合）
        const btn = document.getElementById('download-digest');
        if (btn) btn.addEventListener('click', function() {
            const table = document.getElementById('digest-table');
            if (!table) return;
            let csv = '';
            table.querySelectorAll('tr').forEach(tr => {
            const cols = tr.querySelectorAll('th, td');
            const row = [];
            cols.forEach(td => {
                const parts = Array.from(td.querySelectorAll('div')).map(d => d.innerText.trim());
                const text = (parts.length ? parts.join(' / ') : (td.innerText || '')).replace(/\n/g,' ').replace(/"/g,'""');
                row.push('"' + text + '"');
            });
            csv += row.join(',') + '\n';
            });
            const blob = new Blob(["\uFEFF" + csv], { type: 'text/csv;charset=utf-8;' });
            const url  = URL.createObjectURL(blob);
            const a    = document.createElement('a');
            const now  = new Date();
            const ts   = now.getFullYear() + '-' + String(now.getMonth()+1).padStart(2,'0') + '-' + String(now.getDate()).padStart(2,'0');
            a.href = url;
            a.download = 'submissions_digest_' + ts + '.csv';
            a.click();
            URL.revokeObjectURL(url);
        });

        // ★新規：横展開CSV（team, problem1, 判定1, 通過1, problem2, 判定2, 通過2, ...）
        const btnWide = document.getElementById('download-digest-wide');
        if (!btnWide) return;

        btnWide.addEventListener('click', function () {
            const table = document.getElementById('digest-table');
            if (!table) return;

            const rows = Array.from(table.querySelectorAll('tbody > tr'));

            // 1) まず全行を走査して、全問題の集合を shortname キーで作る
            //    問題セルは "SHORTNAME - 問題名" として表示している前提
            const problemMap = new Map(); // shortname -> full label
            const parsed = rows.map(tr => {
            const tds = tr.querySelectorAll('td');
            const team = tds[0]?.innerText.trim() || '';
            const probs  = Array.from(tds[1]?.querySelectorAll('div') || []).map(d => d.innerText.trim());
            const seikai = Array.from(tds[2]?.querySelectorAll('div') || []).map(d => d.innerText.trim());
            const tests  = Array.from(tds[3]?.querySelectorAll('div') || []).map(d => d.innerText.trim());

            // 同じ行内で index を対応付けて、shortname -> {label,seikai,tests}
            const dict = {}; // shortname -> { label, seikai, tests }
            for (let i = 0; i < Math.max(probs.length, seikai.length, tests.length); i++) {
                const label = probs[i] || '';
                const shortname = label.split(' - ')[0] || label; // 前半をキーに
                const sj = seikai[i] || '';
                const tj = tests[i] || '';
                if (!shortname) continue;
                dict[shortname] = { label, seikai: sj, tests: tj };
                if (!problemMap.has(shortname)) problemMap.set(shortname, label);
            }
            return { team, dict };
            });

            // 2) 列順を決める：shortname 昇順（例: HERON, PO, …）
            const orderedShortnames = Array.from(problemMap.keys()).sort((a,b) => a.localeCompare(b, 'ja'));
            const orderedLabels = orderedShortnames.map(sn => problemMap.get(sn));

            // 3) ヘッダ作成： team, <問題>, <問題 判定>, <問題 通過>, …
            const header = ['team'];
            orderedLabels.forEach(label => {
            header.push(label, `${label} 判定`, `${label} 通過`);
            });

            // 4) 各行を問題順に並べて出力
            const rowsCsv = [header];
            parsed.forEach(r => {
            const row = [r.team];
            orderedShortnames.forEach(sn => {
                const info = r.dict[sn];
                if (info) {
                row.push(info.label, info.seikai, info.tests);
                } else {
                row.push('', '', ''); // 未提出問題は空欄
                }
            });
            rowsCsv.push(row);
            });

            // 5) CSV 生成・ダウンロード
            const csv = rowsCsv.map(cols =>
            cols.map(x => `"${String(x).replace(/\n/g,' ').replace(/"/g,'""')}"`).join(',')
            ).join('\n');

            const blob = new Blob(["\uFEFF" + csv], { type: 'text/csv;charset=utf-8;' });
            const url  = URL.createObjectURL(blob);
            const a    = document.createElement('a');
            const now  = new Date();
            const ts   = now.getFullYear() + '-' + String(now.getMonth()+1).padStart(2,'0') + '-' + String(now.getDate()).padStart(2,'0');
            a.href = url;
            a.download = 'submissions_digest_wide_by_problem_' + ts + '.csv';
            a.click();
            URL.revokeObjectURL(url);
        });
    })();
    </script>

    <div class="card my-3">
        <div class="card-header py-2">
            <strong>提出ダイジェスト</strong>
            <small class="text-muted ml-2">（team / problem / 正解・不正解 / テスト通過数）</small>
        </div>
        <div class="card-body p-0">
            <table id="digest-table" class="table table-sm table-striped mb-0">
            <thead class="thead-light">
                <tr>
                <th style="width:25%;">team</th>
                <th style="width:35%;">problem</th>
                <th style="width:20%;">正解・不正解</th>
                <th style="width:20%;">テスト通過数</th>
                </tr>
            </thead>
            <tbody>
                {% for key in groups|keys|sort %}
                {% set g = groups[key] %}

                {# 表示順：正解を先、同じ中では shortname（=probKey）で #}
                {% set list = [] %}
                {% for k, v in g.items %}{% set list = list|merge([{ 'k': k, 'v': v }]) %}{% endfor %}
                {% set list = list|sort((a,b) =>
                    (a.v.isCorrect == b.v.isCorrect) ? (a.k <=> b.k) : (a.v.isCorrect ? -1 : 1)
                ) %}

                <tr>
                    <td>{{ g.name }}</td>
                    <td>{% for it in list %}<div>{{ it.v.prob }}</div>{% endfor %}</td>
                    <td>{% for it in list %}<div>{{ it.v.seikai }}</div>{% endfor %}</td>
                    <td>{% for it in list %}<div>{{ it.v.passed }}/{{ it.v.total }}</div>{% endfor %}</td>
                </tr>
                {% else %}
                <tr><td colspan="4" class="text-muted">No submissions</td></tr>
                {% endfor %}
            </tbody>
            </table>
        </div>
    </div>


    <table class="data-table table table-hover table{% if showExternalResult and showExternalTestcases %}-3{% endif %}-striped table-sm submissions-table">
        <thead class="thead-light">
        <tr>
            {% if showExternalResult and showExternalTestcases %}
                <th scope="col" colspan="2">ID</th>
            {% else %}
                <th scope="col">ID</th>
            {% endif %}
            {%- if showContest %}

                <th scope="col">contest</th>
            {%- endif %}

            <th scope="col">time</th>
            <th scope="col" colspan="2">team</th>
            <th scope="col">problem</th>
            <th scope="col">lang</th>
            {% if showExternalResult and showExternalTestcases %}
                <th scope="col" colspan="2">result</th>
            {% else %}
                <th scope="col">result</th>
            {% endif %}
            {% if showExternalResult and not showExternalTestcases %}
                <th scope="col">external result</th>
            {% endif %}
            {% if not showExternalResult or not showExternalTestcases %}
                <th scope="col">verified</th>
                <th scope="col">by</th>
            {% endif %}
            {%- if rejudging is defined %}

                <th scope="col">old result</th>
            {%- endif %}
            {%- if showTestcases is defined and showTestcases %}

                <th scope="col" class="not-sortable not-searchable">test results</th>
            {%- endif %}

        </tr>
        </thead>
        <tbody>
        {%- for submission in submissions %}
            {%- if rejudging is defined %}
                {%- set link = path('jury_submission', {submitId: submission.submitid, rejudgingid: rejudging.rejudgingid}) %}
            {%- else %}
                {%- set link = path('jury_submission', {submitId: submission.submitid}) %}
            {%- endif %}

            <tr class="{% if not submission.valid %}ignore{% endif %}"
                data-problem-id="{{ submission.problem.probid }}"
                data-team-id="{{ submission.team.teamid }}"
                data-category-id="{{ submission.team.category.categoryid }}"
                data-language-id="{{ submission.language.langid }}"
                data-submission-id="{{ submission.submitid }}"
                data-result="{{ submission | printValidJurySubmissionResult(false) }}">
                {% if showExternalResult and showExternalTestcases %}
                    <td class="{{ tdExtraClass }}">
                        <a href="{{ link }}">
                            Local
                        </a>
                    </td>
                {% endif %}
                <td class="{{ tdExtraClass }}">
                    <a href="{{ link }}">
                        s{{ submission.submitid }}
                        {% if submission.externalid %}
                            ({{ submission.externalid }})
                        {% endif %}
                    </a>
                </td>
                {%- if showContest %}
                    <td class="{{ tdExtraClass }}"><a href="{{ link }}">c{{ submission.contest.cid }}</a></td>
                {%- endif %}

                <td rowspan="{{ rowSpan }}" class="{{ tdExtraClass }}">
                    <a href="{{ link }}">{{ submission.submittime | printtime(null, submission.contest) }}</a>
                </td>
                <td rowspan="{{ rowSpan }}" class="{{ tdExtraClass }}" style="text-align: right;">
                    <a href="{{ link }}">
                        {{ submission.team | entityIdBadge('t') }}
                    </a>
                </td>
                <td rowspan="{{ rowSpan }}" class="{{ tdExtraClass }}">
                    <a href="{{ link }}">
                        {{ submission.team.effectiveName | u.truncate(teamname_max_length, '…') }}
                    </a>
                </td>
                <td class="probid{{ tdExtraClass }}" rowspan="{{ rowSpan }}">
                    <a href="{{ link }}"
                       title="{{ submission.problem.name }}">{{ submission.contestProblem | problemBadge }}</a>
                </td>
                <td class="langid{{ tdExtraClass }}" rowspan="{{ rowSpan }}">
                    <a href="{{ link }}"
                       title="{{ submission.language.name }}">{{ submission.language.langid }}</a>
                </td>
                {% if showExternalResult and showExternalTestcases %}
                    <td class="{{ tdExtraClass }}">
                        <a href="{{ link }}">
                            Local
                        </a>
                    </td>
                {% endif %}
                <td class="{{ tdExtraClass }}">
                    <a href="{{ link }}">
                        {{ submission | printValidJurySubmissionResult }}
                    </a>
                </td>
                {% if showExternalResult and not showExternalTestcases %}
                    {% if submission.externalJudgements.empty %}
                        {% set externalJudgement = null %}
                    {% else %}
                        {% set externalJudgement = submission.externalJudgements.first %}
                    {% endif %}
                    <td class="{{ tdExtraClass }}">
                        <a href="{{ link }}">
                            {% if submission.externalid is null %}
                                {{- 'n / a' | printValidJuryResult -}}
                            {% elseif externalJudgement is null or externalJudgement.result is empty %}
                                {{- 'pending' | printValidJuryResult -}}
                            {% else %}
                                {{- externalJudgement.result | printValidJuryResult -}}
                            {% endif %}
                        </a>
                    </td>
                {% endif %}
                {% if not showExternalResult or not showExternalTestcases %}
                    {%- set claim = false %}
                    {%- if submission.judgings.first is empty or submission.judgings.first.result is empty -%}
                        {%- set verified = '' %}
                        {%- set juryMember = '' %}
                    {%- else %}
                        {%- set juryMember = submission.judgings.first.juryMember %}
                        {%- if submission.judgings.first.verified %}
                            {%- set verified = 'yes' %}
                        {%- else %}
                            {%- set verified = 'no' %}
                            {%- if submission.judgings.first.juryMember is empty %}
                                {%- set claim = true %}
                            {%- else %}
                                {%- set verified = 'claimed' %}
                            {%- endif %}
                        {%- endif %}
                    {%- endif %}
                    {%- if claim %}
                        {%- set claimArg = {claim: 1} %}
                    {%- else %}
                        {%- set claimArg = {unclaim: 1} %}
                    {%- endif %}
                    <td class="{{ tdExtraClass }}"><a href="{{ link }}">{{ verified }}</a></td>
                    {% if not showExternalResult or not showExternalTestcases %}
                        <td class="{{ tdExtraClass }}">
                            {%- if rejudging is defined %}
                                {%- set claimLink = path('jury_submission', claimArg | merge({submitId: submission.submitid, rejudgingid: rejudging.rejudgingid})) %}
                            {%- else %}
                                {%- set claimLink = path('jury_submission', claimArg | merge({submitId: submission.submitid})) %}
                            {%- endif %}
                            {%- if claim -%}
                                <a class="btn btn-outline-secondary btn-sm"
                                   href="{{ claimLink }}">claim</a>
                            {%- elseif (not submission.judgings.first or not submission.judgings.first.verified) and juryMember == app.user.username -%}
                                <a class="btn btn-info btn-sm" href="{{ claimLink }}">unclaim</a>
                            {%- else -%}
                                <a href="{{ link }}">{{ juryMember }}</a>
                            {%- endif -%}
                        </td>
                    {% endif %}
                {% endif %}
                {%- if rejudging is defined %}

                    <td class="{{ tdExtraClass }}"><a href="{{ path('jury_submission', {submitId: submission.submitid}) }}">
                            {{ submission.oldResult | printValidJuryResult }}
                        </a></td>
                {%- endif %}
                {%- if showTestcases is defined and showTestcases %}

                    <td class="testcase-results{{ tdExtraClass }}">
                        {{- submission | testcaseResults -}}
                    </td>
                {%- endif %}

            </tr>
            {% if showExternalResult and showExternalTestcases %}
                <tr>
                    {% if submission.externalJudgements.empty %}
                        {% set externalJudgement = null %}
                    {% else %}
                        {% set externalJudgement = submission.externalJudgements.first %}
                    {% endif %}
                    {% if external_ccs_submission_url is not empty %}
                        {% set externalSubmissionUrl = submission | externalCcsUrl %}
                    {% else %}
                        {% set externalSubmissionUrl = null %}
                    {% endif %}
                    <td rowspan="2">
                        <a {% if externalSubmissionUrl is not null %}href="{{ externalSubmissionUrl }}"{% endif %}>
                            External
                        </a>
                    </td>
                    <td rowspan="2">
                        <a {% if externalSubmissionUrl is not null %}href="{{ externalSubmissionUrl }}"{% endif %}>
                            {{ submission.externalid }}
                        </a>
                    </td>
                    <td>
                        <a {% if externalSubmissionUrl is not null %}href="{{ externalSubmissionUrl }}"{% endif %}>
                            External
                        </a>
                    </td>
                    <td>
                        <a {% if externalSubmissionUrl is not null %}href="{{ externalSubmissionUrl }}"{% endif %}>
                            {% if externalJudgement is null or externalJudgement.result is empty %}
                                {{- 'pending' | printValidJuryResult -}}
                            {% else %}
                                {{- externalJudgement.result | printValidJuryResult -}}
                            {% endif %}
                        </a>
                    </td>
                    <td class="testcase-results">
                        {{- submission | testcaseResults(true) -}}
                    </td>
                </tr>
                <tr>
                    <td colspan="3" class="inline-verify-form">
                        {% if externalJudgement is not null %}
                            {% include 'jury/partials/verify_form.html.twig' with {
                                label: 'Shadow difference verified',
                                judging: externalJudgement,
                                form_action: path('jury_shadow_difference_verify', {extjudgementid: externalJudgement.extjudgementid}),
                                show_form: true,
                                show_icat: false} %}
                        {% endif %}
                    </td>
                </tr>
            {% endif %}
        {%- endfor %}

        </tbody>
    </table>
{% endif %}
